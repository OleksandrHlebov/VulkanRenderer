name: CMake Windows Matrix Build with Vulkan

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: windows-latest

    strategy:
      matrix:
        compiler: [msvc, mingw]
        build_type: [Release, Debug]

    env:
      BUILD_TYPE: ${{ matrix.build_type }}
      VULKAN_VERSION: 1.3.275.0
      VULKAN_SDK_DIR: C:\VulkanSDK\1.3.275.0

    steps:
    - uses: actions/checkout@v4

    - name: Set up MSVC
      if: matrix.compiler == 'msvc'
      uses: ilammy/msvc-dev-cmd@v1

    - name: Add MinGW to PATH
      if: matrix.compiler == 'mingw'
      shell: bash
      run: echo "C:/Program Files/mingw-w64/mingw64/bin" >> $GITHUB_PATH

    - name: Cache Vulkan SDK
      id: cache-vulkan
      uses: actions/cache@v4
      with:
        path: ${{ env.VULKAN_SDK_DIR }}
        key: vulkan-sdk-${{ env.VULKAN_VERSION }}

    - name: Download and Extract Vulkan SDK
      if: steps.cache-vulkan.outputs.cache-hit != 'true'
      shell: powershell
      run: |
        $version = "${{ env.VULKAN_VERSION }}"
        $zipUrl = "https://sdk.lunarg.com/sdk/download/$version/windows/VulkanSDK-$version-windows.zip"
        Invoke-WebRequest $zipUrl -OutFile vulkan-sdk.zip
        Expand-Archive vulkan-sdk.zip -DestinationPath "C:\VulkanSDK"

    - name: Set Vulkan Env Vars
      shell: powershell
      run: |
        echo "VULKAN_SDK=${{ env.VULKAN_SDK_DIR }}" >> $env:GITHUB_ENV
        echo "${{ env.VULKAN_SDK_DIR }}\Bin" >> $env:GITHUB_PATH

    - name: Configure CMake
      run: >
        cmake -B build
        -G "${{ matrix.compiler == 'msvc' && 'NMake Makefiles' || 'MinGW Makefiles' }}"
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}

    - name: Build
      run: cmake --build build

    - name: Test
      working-directory: build
      run: ctest -C ${{ matrix.build_type }}
